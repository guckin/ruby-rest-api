require 'pry'
require_relative 'entities'

class NoSlipAvailable < StandardError; end

# { "id":"abc123", #this should be automatically generated by your API and should probably be a string
# "name": "Sea Witch", #The name of the boat, a string
# "type":"Catamaran", #The type of boat, power boat, sailboat, catamaran etc. a string
# "length":28, #The length of the boat
# "at_sea":false #A boolean indicating if the boat is at sea or not
# }
class Boats < Entities
  ATTRIBUTES = %i[id name type length at_sea].freeze

  def post(data)
    data = filter(data)
    data[:at_sea] = true
    super data
  end

  def delete(id)
    at_sea = at_sea?(id)
    if super id
      unless at_sea
        patch_data = { '$set' => { current_boat: 'None' } }
        slips.update_one({ current_boat: id }, patch_data)
      end
    else
      false
    end
  end

  def patch(id, data)
    data = filter(data)
    slip = available_slip
    raise NoSlipAvailable if data[:at_sea] == false && slip.nil?
    ret = super id, data
    if data[:at_sea] == false && slip
      patch_data = { '$set' => { current_boat: id } }
      slips.update_one({ id: slip }, patch_data)
    end
    if data[:at_sea]
      patch_data = { '$set' => { current_boat: 'None' } }
      slips.update_one({ current_boat: id }, patch_data)
    end
    ret
  end

  def put(id, data)
    data = filter(data)
    data[:at_sea] = true
    super id, data
  end

  def at_sea?(id)
    get(id)[:at_sea]
  end

end



